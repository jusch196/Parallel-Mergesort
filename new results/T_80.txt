# JMH version: 1.21
# VM version: JDK 10.0.2, OpenJDK 64-Bit Server VM, 10.0.2+13-Ubuntu-1ubuntu0.18.04.4
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: <none>
# Warmup: 5 iterations, 3 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.BalancedMergesortBenchmark.testMethodBalancedParallelMergesortMerge4Cores

# Run progress: 0,00% complete, ETA 00:10:00
# Fork: 1 of 5
# Warmup Iteration   1: 22456,904 ±(99.9%) 2649,343 ns/op
# Warmup Iteration   2: 9657,038 ±(99.9%) 4667,738 ns/op
# Warmup Iteration   3: 8694,800 ±(99.9%) 2129,331 ns/op
# Warmup Iteration   4: 8415,020 ±(99.9%) 886,539 ns/op
# Warmup Iteration   5: 8665,369 ±(99.9%) 785,239 ns/op
Iteration   1: 8434,920 ±(99.9%) 918,728 ns/op
Iteration   2: 8448,815 ±(99.9%) 465,830 ns/op
Iteration   3: 8542,150 ±(99.9%) 594,010 ns/op
Iteration   4: 8435,342 ±(99.9%) 672,156 ns/op
Iteration   5: 8487,276 ±(99.9%) 789,271 ns/op

# Run progress: 6,67% complete, ETA 00:09:28
# Fork: 2 of 5
# Warmup Iteration   1: 12197,210 ±(99.9%) 7709,435 ns/op
# Warmup Iteration   2: 8371,491 ±(99.9%) 576,948 ns/op
# Warmup Iteration   3: 8316,627 ±(99.9%) 862,055 ns/op
# Warmup Iteration   4: 8545,519 ±(99.9%) 927,776 ns/op
# Warmup Iteration   5: 8517,280 ±(99.9%) 1514,884 ns/op
Iteration   1: 8408,806 ±(99.9%) 1234,942 ns/op
Iteration   2: 8344,337 ±(99.9%) 380,125 ns/op
Iteration   3: 8344,315 ±(99.9%) 530,172 ns/op
Iteration   4: 8330,554 ±(99.9%) 340,284 ns/op
Iteration   5: 8462,576 ±(99.9%) 613,660 ns/op

# Run progress: 13,33% complete, ETA 00:08:47
# Fork: 3 of 5
# Warmup Iteration   1: 12058,814 ±(99.9%) 4046,423 ns/op
# Warmup Iteration   2: 8448,130 ±(99.9%) 1004,984 ns/op
# Warmup Iteration   3: 8418,456 ±(99.9%) 1178,908 ns/op
# Warmup Iteration   4: 8490,409 ±(99.9%) 438,366 ns/op
# Warmup Iteration   5: 8360,624 ±(99.9%) 303,979 ns/op
Iteration   1: 8570,572 ±(99.9%) 1610,170 ns/op
Iteration   2: 8417,555 ±(99.9%) 594,915 ns/op
Iteration   3: 8427,910 ±(99.9%) 776,798 ns/op
Iteration   4: 8382,246 ±(99.9%) 610,550 ns/op
Iteration   5: 8372,353 ±(99.9%) 704,315 ns/op

# Run progress: 20,00% complete, ETA 00:08:06
# Fork: 4 of 5
# Warmup Iteration   1: 13483,375 ±(99.9%) 1786,788 ns/op
# Warmup Iteration   2: 8526,298 ±(99.9%) 1761,173 ns/op
# Warmup Iteration   3: 8421,759 ±(99.9%) 1136,437 ns/op
# Warmup Iteration   4: 8648,319 ±(99.9%) 1289,282 ns/op
# Warmup Iteration   5: 8524,139 ±(99.9%) 1447,752 ns/op
Iteration   1: 8334,435 ±(99.9%) 454,255 ns/op
Iteration   2: 8373,888 ±(99.9%) 567,165 ns/op
Iteration   3: 8353,884 ±(99.9%) 667,101 ns/op
Iteration   4: 8345,681 ±(99.9%) 834,599 ns/op
Iteration   5: 8387,723 ±(99.9%) 366,685 ns/op

# Run progress: 26,67% complete, ETA 00:07:25
# Fork: 5 of 5
# Warmup Iteration   1: 45790,282 ±(99.9%) 20585,675 ns/op
# Warmup Iteration   2: 8584,284 ±(99.9%) 513,167 ns/op
# Warmup Iteration   3: 8651,098 ±(99.9%) 1020,901 ns/op
# Warmup Iteration   4: 8466,490 ±(99.9%) 1947,112 ns/op
# Warmup Iteration   5: 8726,011 ±(99.9%) 730,520 ns/op
Iteration   1: 8537,092 ±(99.9%) 1348,904 ns/op
Iteration   2: 8499,416 ±(99.9%) 1805,715 ns/op
Iteration   3: 8451,962 ±(99.9%) 462,204 ns/op
Iteration   4: 8466,156 ±(99.9%) 302,758 ns/op
Iteration   5: 8466,997 ±(99.9%) 932,287 ns/op


Result "org.sample.BalancedMergesortBenchmark.testMethodBalancedParallelMergesortMerge4Cores":
  8425,078 ±(99.9%) 51,554 ns/op [Average]
  (min, avg, max) = (8330,554, 8425,078, 8570,572), stdev = 68,823
  CI (99.9%): [8373,524, 8476,633] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 10.0.2, OpenJDK 64-Bit Server VM, 10.0.2+13-Ubuntu-1ubuntu0.18.04.4
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: <none>
# Warmup: 5 iterations, 3 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.BalancedMergesortBenchmark.testMethod_BalancedParallelMergesortMerges2Halfs

# Run progress: 33,33% complete, ETA 00:06:45
# Fork: 1 of 5
# Warmup Iteration   1: 10705,631 ±(99.9%) 1971,346 ns/op
# Warmup Iteration   2: 8761,169 ±(99.9%) 3677,768 ns/op
# Warmup Iteration   3: 8323,920 ±(99.9%) 912,665 ns/op
# Warmup Iteration   4: 8429,489 ±(99.9%) 475,954 ns/op
# Warmup Iteration   5: 8396,350 ±(99.9%) 1067,357 ns/op
Iteration   1: 8362,830 ±(99.9%) 776,395 ns/op
Iteration   2: 8368,271 ±(99.9%) 92,490 ns/op
Iteration   3: 8360,156 ±(99.9%) 623,757 ns/op
Iteration   4: 8444,725 ±(99.9%) 276,207 ns/op
Iteration   5: 8424,084 ±(99.9%) 632,222 ns/op

# Run progress: 40,00% complete, ETA 00:06:04
# Fork: 2 of 5
# Warmup Iteration   1: 12473,411 ±(99.9%) 5518,856 ns/op
# Warmup Iteration   2: 8616,193 ±(99.9%) 716,609 ns/op
# Warmup Iteration   3: 8382,637 ±(99.9%) 529,393 ns/op
# Warmup Iteration   4: 8523,707 ±(99.9%) 2170,889 ns/op
# Warmup Iteration   5: 8565,894 ±(99.9%) 1809,391 ns/op
Iteration   1: 8319,978 ±(99.9%) 520,830 ns/op
Iteration   2: 8388,206 ±(99.9%) 782,980 ns/op
Iteration   3: 8397,978 ±(99.9%) 674,996 ns/op
Iteration   4: 8415,681 ±(99.9%) 664,416 ns/op
Iteration   5: 8345,917 ±(99.9%) 201,842 ns/op

# Run progress: 46,67% complete, ETA 00:05:24
# Fork: 3 of 5
# Warmup Iteration   1: 10054,573 ±(99.9%) 2446,886 ns/op
# Warmup Iteration   2: 9359,187 ±(99.9%) 6093,239 ns/op
# Warmup Iteration   3: 8581,152 ±(99.9%) 545,800 ns/op
# Warmup Iteration   4: 8821,715 ±(99.9%) 3162,375 ns/op
# Warmup Iteration   5: 8838,500 ±(99.9%) 1656,183 ns/op
Iteration   1: 8539,967 ±(99.9%) 760,059 ns/op
Iteration   2: 8529,305 ±(99.9%) 435,599 ns/op
Iteration   3: 8672,861 ±(99.9%) 835,307 ns/op
Iteration   4: 8530,563 ±(99.9%) 713,045 ns/op
Iteration   5: 8611,459 ±(99.9%) 362,218 ns/op

# Run progress: 53,33% complete, ETA 00:04:43
# Fork: 4 of 5
# Warmup Iteration   1: 17336,368 ±(99.9%) 38822,456 ns/op
# Warmup Iteration   2: 8603,196 ±(99.9%) 1592,735 ns/op
# Warmup Iteration   3: 8416,666 ±(99.9%) 536,601 ns/op
# Warmup Iteration   4: 8471,299 ±(99.9%) 1438,900 ns/op
# Warmup Iteration   5: 8446,515 ±(99.9%) 1038,903 ns/op
Iteration   1: 8492,188 ±(99.9%) 523,594 ns/op
Iteration   2: 8392,075 ±(99.9%) 183,233 ns/op
Iteration   3: 8509,734 ±(99.9%) 671,697 ns/op
Iteration   4: 8527,164 ±(99.9%) 812,406 ns/op
Iteration   5: 8480,121 ±(99.9%) 636,929 ns/op

# Run progress: 60,00% complete, ETA 00:04:03
# Fork: 5 of 5
# Warmup Iteration   1: 13365,702 ±(99.9%) 7888,334 ns/op
# Warmup Iteration   2: 8352,177 ±(99.9%) 1147,667 ns/op
# Warmup Iteration   3: 8460,647 ±(99.9%) 1509,301 ns/op
# Warmup Iteration   4: 8653,774 ±(99.9%) 725,985 ns/op
# Warmup Iteration   5: 8625,263 ±(99.9%) 806,527 ns/op
Iteration   1: 8357,344 ±(99.9%) 751,097 ns/op
Iteration   2: 8351,066 ±(99.9%) 342,304 ns/op
Iteration   3: 8356,842 ±(99.9%) 781,717 ns/op
Iteration   4: 8365,364 ±(99.9%) 472,541 ns/op
Iteration   5: 8421,079 ±(99.9%) 1319,425 ns/op


Result "org.sample.BalancedMergesortBenchmark.testMethod_BalancedParallelMergesortMerges2Halfs":
  8438,598 ±(99.9%) 68,802 ns/op [Average]
  (min, avg, max) = (8319,978, 8438,598, 8672,861), stdev = 91,848
  CI (99.9%): [8369,797, 8507,400] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 10.0.2, OpenJDK 64-Bit Server VM, 10.0.2+13-Ubuntu-1ubuntu0.18.04.4
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: <none>
# Warmup: 5 iterations, 3 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.BalancedMergesortBenchmark.testMethod_BalancedParallelMergesortSizeEquals4

# Run progress: 66,67% complete, ETA 00:03:22
# Fork: 1 of 5
# Warmup Iteration   1: 2681,638 ±(99.9%) 1319,259 ns/op
# Warmup Iteration   2: 2212,953 ±(99.9%) 231,628 ns/op
# Warmup Iteration   3: 2393,060 ±(99.9%) 679,457 ns/op
# Warmup Iteration   4: 2443,920 ±(99.9%) 904,926 ns/op
# Warmup Iteration   5: 2336,511 ±(99.9%) 272,565 ns/op
Iteration   1: 2333,129 ±(99.9%) 349,509 ns/op
Iteration   2: 2347,734 ±(99.9%) 258,872 ns/op
Iteration   3: 2374,691 ±(99.9%) 311,763 ns/op
Iteration   4: 2319,219 ±(99.9%) 210,909 ns/op
Iteration   5: 2322,566 ±(99.9%) 164,811 ns/op

# Run progress: 73,33% complete, ETA 00:02:42
# Fork: 2 of 5
# Warmup Iteration   1: 3161,081 ±(99.9%) 3710,720 ns/op
# Warmup Iteration   2: 2333,097 ±(99.9%) 771,651 ns/op
# Warmup Iteration   3: 2288,805 ±(99.9%) 531,689 ns/op
# Warmup Iteration   4: 2300,011 ±(99.9%) 454,020 ns/op
# Warmup Iteration   5: 2275,077 ±(99.9%) 394,495 ns/op
Iteration   1: 2316,959 ±(99.9%) 460,910 ns/op
Iteration   2: 2315,066 ±(99.9%) 343,544 ns/op
Iteration   3: 2352,345 ±(99.9%) 741,133 ns/op
Iteration   4: 2287,547 ±(99.9%) 437,890 ns/op
Iteration   5: 2310,531 ±(99.9%) 363,633 ns/op

# Run progress: 80,00% complete, ETA 00:02:01
# Fork: 3 of 5
# Warmup Iteration   1: 2702,980 ±(99.9%) 915,178 ns/op
# Warmup Iteration   2: 2218,162 ±(99.9%) 362,400 ns/op
# Warmup Iteration   3: 2308,895 ±(99.9%) 517,891 ns/op
# Warmup Iteration   4: 2300,425 ±(99.9%) 498,207 ns/op
# Warmup Iteration   5: 2269,303 ±(99.9%) 663,406 ns/op
Iteration   1: 2259,678 ±(99.9%) 305,323 ns/op
Iteration   2: 2328,943 ±(99.9%) 100,782 ns/op
Iteration   3: 2268,897 ±(99.9%) 329,946 ns/op
Iteration   4: 2289,498 ±(99.9%) 367,240 ns/op
Iteration   5: 2286,917 ±(99.9%) 137,900 ns/op

# Run progress: 86,67% complete, ETA 00:01:21
# Fork: 4 of 5
# Warmup Iteration   1: 3340,780 ±(99.9%) 1328,551 ns/op
# Warmup Iteration   2: 2322,772 ±(99.9%) 463,689 ns/op
# Warmup Iteration   3: 2353,725 ±(99.9%) 801,311 ns/op
# Warmup Iteration   4: 2317,626 ±(99.9%) 457,385 ns/op
# Warmup Iteration   5: 2275,156 ±(99.9%) 209,960 ns/op
Iteration   1: 2327,901 ±(99.9%) 282,437 ns/op
Iteration   2: 2323,124 ±(99.9%) 193,707 ns/op
Iteration   3: 2357,499 ±(99.9%) 596,667 ns/op
Iteration   4: 2302,090 ±(99.9%) 58,219 ns/op
Iteration   5: 2345,835 ±(99.9%) 264,762 ns/op

# Run progress: 93,33% complete, ETA 00:00:40
# Fork: 5 of 5
# Warmup Iteration   1: 5050,175 ±(99.9%) 2040,790 ns/op
# Warmup Iteration   2: 2357,398 ±(99.9%) 695,823 ns/op
# Warmup Iteration   3: 2276,625 ±(99.9%) 159,134 ns/op
# Warmup Iteration   4: 2264,063 ±(99.9%) 376,046 ns/op
# Warmup Iteration   5: 2251,125 ±(99.9%) 164,954 ns/op
Iteration   1: 2288,642 ±(99.9%) 274,734 ns/op
Iteration   2: 2321,916 ±(99.9%) 257,117 ns/op
Iteration   3: 2293,472 ±(99.9%) 258,814 ns/op
Iteration   4: 2245,463 ±(99.9%) 135,624 ns/op
Iteration   5: 2272,841 ±(99.9%) 174,051 ns/op


Result "org.sample.BalancedMergesortBenchmark.testMethod_BalancedParallelMergesortSizeEquals4":
  2311,700 ±(99.9%) 24,047 ns/op [Average]
  (min, avg, max) = (2245,463, 2311,700, 2374,691), stdev = 32,102
  CI (99.9%): [2287,653, 2335,747] (assumes normal distribution)


# Run complete. Total time: 00:10:07

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                    Mode  Cnt     Score    Error  Units
BalancedMergesortBenchmark.testMethodBalancedParallelMergesortMerge4Cores    avgt   25  8425,078 ± 51,554  ns/op
BalancedMergesortBenchmark.testMethod_BalancedParallelMergesortMerges2Halfs  avgt   25  8438,598 ± 68,802  ns/op
BalancedMergesortBenchmark.testMethod_BalancedParallelMergesortSizeEquals4   avgt   25  2311,700 ± 24,047  ns/op
